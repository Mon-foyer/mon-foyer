{
  "openapi": "3.0.1",
  "info": {
    "title": "Mon foyer",
    "description": "Mon foyer's API definitions",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Mon foyer's Wiki",
    "url": "https://github.com/Mon-foyer/mon-foyer/wiki"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication"
    },
    {
      "name": "Home"
    },
    {
      "name": "Invitation",
      "description": "Invitation to join a home"
    },
    {
      "name": "User"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "User login",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/Name"
                  },
                  "password": {
                    "$ref": "#/components/schemas/Password"
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/home/{id}": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Gets a home",
        "description": "Gets a home by its id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "A home and its inhabitants",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Home"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "inhabitants": {
                          "type": "array",
                          "description": "Home inhabitants **without their homeId, password and token**",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    }
                  ],
                  "required": [
                    "inhabitants"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "The user is not an inhabitant of the home"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invitation": {
      "get": {
        "tags": [
          "Invitation"
        ],
        "summary": "Gets a user pending invitations",
        "description": "Retrieves the list of invitations not yet accepted nor rejected",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pending invitations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "$ref": "#/components/schemas/_Id"
                      },
                      "createdAt": {
                        "$ref": "#/components/schemas/CreatedAt"
                      },
                      "home": {
                        "type": "object",
                        "description": "Home to which the user is invited",
                        "properties": {
                          "_id": {
                            "$ref": "#/components/schemas/HomeId"
                          },
                          "name": {
                            "$ref": "#/components/schemas/Name"
                          }
                        }
                      },
                      "invitee": {
                        "type": "object",
                        "description": "User invited",
                        "properties": {
                          "_id": {
                            "$ref": "#/components/schemas/UserId"
                          },
                          "name": {
                            "$ref": "#/components/schemas/Name"
                          }
                        }
                      },
                      "inviter": {
                        "type": "object",
                        "description": "User inviter",
                        "properties": {
                          "_id": {
                            "$ref": "#/components/schemas/UserId"
                          },
                          "name": {
                            "$ref": "#/components/schemas/Name"
                          }
                        }
                      }
                    },
                    "required": [
                      "_id",
                      "createdAt",
                      "home",
                      "inviter",
                      "invitee"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Invitation"
        ],
        "summary": "Creates a new invitation",
        "description": "Sends a new proposal to join a home to a user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user to invite"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/LocationHeader"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "description": "The invitation could not be created because the target user is already part of a home Or Unable to create an invitation as you've already invited one person"
          },
          "422": {
            "description": "* invite_yourself: The requester invited itself\n* too_many_invitations: The requester already has a pending invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "424": {
            "description": "The targeted user cannot be invited because it does not exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invitation/{id}": {
      "delete": {
        "tags": [
          "Invitation"
        ],
        "summary": "Deletes an invitation",
        "description": "Deletes an invitation by its id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "The invitation has been successfully deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invitation/{id}/accept": {
      "delete": {
        "tags": [
          "Invitation"
        ],
        "summary": "Accepts an invitation",
        "description": "Adds the invitee to the home of the inviter.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "The invitation has been successfully accepted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "424": {
            "description": "The inviter does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Registers a new user",
        "description": "Creates a new user from just a username and a password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/Name"
                  },
                  "password": {
                    "$ref": "#/components/schemas/Password"
                  }
                },
                "required": [
                  "name",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/LocationHeader"
          },
          "409": {
            "description": "A user with this login already exists"
          },
          "422": {
            "description": "password_too_weak: the submitted password does not meet security requirements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets a user",
        "description": "Gets a user by its id",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "The targeted user **without its password and token**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "id": {
        "in": "path",
        "name": "id",
        "schema": {
          "$ref": "#/components/schemas/_Id"
        },
        "required": true
      }
    },
    "responses": {
      "Forbidden": {
        "description": "The user does not have the rights to access to this resource",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "message": "NotFound"
              }
            }
          }
        }
      },
      "LocationHeader": {
        "description": "The resource has been created",
        "headers": {
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "URL at which the resource can be found"
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "message": "NotFound"
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "status": 401,
                "message": "Unauthorized"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "_Id": {
        "type": "string",
        "format": "objectId",
        "description": "Resource unique identifier"
      },
      "CreatedAt": {
        "type": "string",
        "format": "date",
        "description": "Resource creation date"
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "short string describing the error to use as translation key",
            "example": "password_too_weak"
          },
          "status": {
            "$ref": "#/components/schemas/HttpError"
          }
        },
        "required": [
          "error",
          "status"
        ]
      },
      "Home": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/HomeId"
          },
          "createdAt": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UpdatedAt"
          }
        },
        "required": [
          "_id",
          "createdAt",
          "name",
          "updatedAt"
        ]
      },
      "HomeId": {
        "type": "string",
        "format": "objectId",
        "description": "Home Id"
      },
      "HttpError": {
        "type": "integer",
        "minimum": 400,
        "maximum": 599,
        "description": "Http response status code"
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/_Id"
          },
          "inviterId": {
            "type": "string",
            "format": "objectId",
            "description": "Id of the user who sent the invitation"
          },
          "homeId": {
            "$ref": "#/components/schemas/HomeId"
          },
          "inviteeId": {
            "type": "string",
            "format": "objectId",
            "description": "Id of the user who received the invitation"
          }
        }
      },
      "Name": {
        "type": "string",
        "description": "Resource custom name"
      },
      "Password": {
        "type": "string",
        "description": "Encrypted password"
      },
      "UpdatedAt": {
        "type": "string",
        "format": "date",
        "description": "Last resource update date"
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/_Id"
          },
          "createdAt": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "homeId": {
            "$ref": "#/components/schemas/HomeId"
          },
          "joinedAt": {
            "type": "string",
            "format": "date",
            "description": "Date at which the user joined its current home"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "password": {
            "$ref": "#/components/schemas/Password"
          },
          "token": {
            "type": "string",
            "description": "Bearer token"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UpdatedAt"
          }
        },
        "required": [
          "_id",
          "createdAt",
          "joinedAt",
          "name",
          "updatedAt"
        ]
      },
      "UserId": {
        "type": "string",
        "format": "objectId",
        "description": "User Id"
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}